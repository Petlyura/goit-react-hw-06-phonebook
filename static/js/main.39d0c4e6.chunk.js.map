{"version":3,"sources":["components/ContactForm/ContactFrom.module.css","components/App/App.module.css","components/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","components/Layout/Layout.module.css","components/ContactsList/transitions/itemTransition.module.css","components/App/transition/transitionTitle.module.css","components/Notification/transitions/NotificationTransition.module.css","components/Layout/Layout.js","redux/contacts/contactsActions.js","components/Filter/Filter.js","components/ContactForm/ContactFrom.js","components/ContactsListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/Notification/Notification.js","components/App/App.js","redux/contacts/contactsReducers.js","redux/store.js","index.js"],"names":["module","exports","Layout","children","className","styles","container","addContact","createAction","name","number","payload","contact","id","uuidv4","getFromLS","removeContact","filterContact","mapDispatchToProps","onChangeFilter","contactsActions","connect","state","value","contacts","filter","label","input","type","vlaue","onChange","e","target","ContactForm","handleInputChange","event","setState","handleFormSubmit","preventDefault","props","some","openModal","onAddContact","this","onSubmit","required","button","Component","items","ownProps","find","dispatch","onRemove","item","span","onClick","normalizedFilter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","classNames","itemTransition","timeout","Notification","notificationContent","App","isOpenModal","handleOpenModal","setTimeout","localStorage","getItem","localStorageData","JSON","parse","onCheckContacts","in","appear","transitionTitle","title","section","length","NotificationTransition","unmountOnExit","contactsReducers","createReducer","action","contactsLocalStorage","parsedContacts","setItem","stringify","newLocalStorageData","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39d0c4e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFrom_input__2wQOW\",\"label\":\"ContactFrom_label__2zmD8\",\"button\":\"ContactFrom_button__1pwhv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1F7bV\",\"section\":\"App_section__2WyB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsListItem_item__2VfmB\",\"span\":\"ContactsListItem_span__1OIi3\",\"button\":\"ContactsListItem_button__3wfOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2juPt\",\"input\":\"Filter_input__1xqMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__3cBDV\",\"notificationContent\":\"Notification_notificationContent__1dT6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__2vuFe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"itemTransition_enter__37JEZ\",\"enterActive\":\"itemTransition_enterActive__2U7jy\",\"exit\":\"itemTransition_exit__1BoRk\",\"exitActive\":\"itemTransition_exitActive__YqGjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transitionTitle_appear__1KsDb\",\"appearActive\":\"transitionTitle_appearActive__2E5xE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"NotificationTransition_enter__2yGI4\",\"enterActive\":\"NotificationTransition_enterActive__26EbF\",\"exit\":\"NotificationTransition_exit__3Wug6\",\"exitActive\":\"NotificationTransition_exitActive__kbwdu\"};","import React from 'react';\nimport styles from './Layout.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Layout({children}) {\n    return (\n        <section className={styles.container}>\n            {children}\n        </section>\n    )\n}\n\nLayout.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.object),\n}\n\nexport default Layout;","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    contact: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  },\n}));\nconst getFromLS = createAction('contacts/getFromLS');\nconst removeContact = createAction('contacts/remove');\nconst filterContact = createAction('contacts/filter');\n\nexport default { addContact, removeContact, filterContact, getFromLS };\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport {connect} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({value, onChangeFilter}) => (\n  <div>\n    <label className={styles.label}>\n      Search contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        vlaue={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.filterContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport styles from './ContactFrom.module.css';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func,\n  }\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const {name, number} = this.state;\n    const {contacts} = this.props;\n\n    const isIncludeContact = contacts.some(contact => contact.name === name);\n\n    if(isIncludeContact){\n      this.props.openModal();\n      return;\n    }\n\n    this.props.onAddContact(name, number);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n          className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContact,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport {connect} from 'react-redux';\nimport styles from './ContactsListItem.module.css';\nimport contactsActions from '../../redux/contacts/contactsActions';\nimport PropTypes from 'prop-types';\n\n\nfunction ContactListItem({ name, number, onRemove }) {\n  return (\n    <li className={styles.item}>\n      <span className={styles.span}>\n        {name}: {number}\n      </span>\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\n        X\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onRemove: PropTypes.func,\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const contact = state.contacts.items.find(contact => contact.id === ownProps.id);\n\n  return {\n    ...contact\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsActions.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from 'react';\nimport ContactListItem from '../ContactsListItem/ContactListItem';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport itemTransition from './transitions/itemTransition.module.css';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction ContactsList({ contacts }) {\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map(({ id }) => (\n        <CSSTransition key={id} classNames={itemTransition} timeout={250}>\n          <ContactListItem id={id} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n}\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLowerCase();\n\n  const visibleContacts = items.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nexport default connect(mapStateToProps)(ContactsList);\n","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = () => (\n    <div className={styles.container}>\n        <p className={styles.notificationContent}>Contact already exist!</p>\n    </div>\n)\n\nexport default Notification;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Layout from '../Layout/Layout';\nimport Filter from '../Filter/Filter';\nimport ContactForm from '../ContactForm/ContactFrom';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Notification from '../Notification/Notification';\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './App.module.css';\nimport transitionTitle from './transition/transitionTitle.module.css';\nimport NotificationTransition from '../Notification/transitions/NotificationTransition.module.css';\nimport contactsActions from '../../redux/contacts/contactsActions';\n\nclass App extends Component {\n  state = {\n    isOpenModal: false,\n  };\n\n  componentDidMount(){\n    const isLocalStorageNotEmpty = localStorage.getItem('contacts');\n\n    if(isLocalStorageNotEmpty){\n      const localStorageData = JSON.parse(localStorage.getItem('contacts'));\n      this.props.onCheckContacts(localStorageData);\n    }\n  }\n\n  handleOpenModal = () => {\n    this.setState({isOpenModal: true});\n    setTimeout(() => {\n      this.setState({ isOpenModal: false });\n    }, 3000);\n  }\n\n  render() {\n    const { isOpenModal } = this.state;\n    const { contacts } = this.props;\n\n    return (\n      <Layout>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={transitionTitle}\n        >\n          <h2 className={styles.title}>Phonebook</h2>\n        </CSSTransition>\n\n        <section className={styles.section}>\n          <ContactForm openModal={this.handleOpenModal}/>\n        </section>\n\n        <h2 className={styles.title}>Contacts</h2>\n\n        {contacts.length > 0 ? (\n          <section className={styles.section}>\n            <Filter />\n            <ContactsList />\n          </section>\n        ) : (\n          <h2>Your phonebook is empty.</h2>\n        )}\n        <CSSTransition\n          in={isOpenModal}\n          appear={true}\n          classNames={NotificationTransition}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\n\nconst mapDispatchToProps = {\n  onCheckContacts: contactsActions.getFromLS,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport {createReducer} from '@reduxjs/toolkit';\nimport contactsActions from './contactsActions';\n\nconst addContact = (state, action) => {\n  const contactsLocalStorage = localStorage.getItem('contacts');\n  const contact = action.payload.contact;\n  if(!contactsLocalStorage){\n    localStorage.setItem('contacts', JSON.stringify([contact]));\n  } else{\n    const parsedContacts = JSON.parse(contactsLocalStorage);\n    localStorage.setItem('contacts', JSON.stringify([contact, ...parsedContacts]));\n  }\n\n  return [action.payload.contact, ...state]\n};\nconst getFromLS = (state, action) => action.payload;\nconst removeContact = (state, action) => {\n  const localStorageData = JSON.parse(localStorage.getItem('contacts'));\n  const newLocalStorageData = localStorageData.filter(contact => contact.id !== action.payload);\n  localStorage.setItem('contacts', JSON.stringify(newLocalStorageData));\n return state.filter(contact => contact.id !== action.payload)\n};\nconst filterContact = (state, action) => action.payload;\n\nconst contactsReducers = createReducer([], {\n  [contactsActions.addContact]: addContact,\n  [contactsActions.removeContact]: removeContact,\n  [contactsActions.getFromLS]: getFromLS,\n})\n\nconst filterReducer = createReducer('', {\n  [contactsActions.filterContact]: filterContact,\n})\n\nexport default combineReducers({\n  items: contactsReducers,\n  filter: filterReducer,\n});\n","import {configureStore} from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducers';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  }\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport './base.css';\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n"],"sourceRoot":""}